# Generated by Django 3.2.2 on 2021-05-25 10:57

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_a', models.CharField(max_length=50)),
                ('block_b', models.CharField(max_length=50)),
                ('block_c', models.CharField(max_length=50)),
                ('block_d', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor', models.PositiveIntegerField(default=0)),
                ('blocks', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.block')),
            ],
        ),
        migrations.CreateModel(
            name='invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('mode_of_payment', models.CharField(choices=[('Cash', 'Cash'), ('UPI', 'UPI'), ('Net Banking', 'Net Banking')], max_length=100)),
                ('property_type', models.CharField(choices=[('Flat', 'Flat'), ('Villa', 'Villa'), ('Plot', 'Plot'), ('Shop', 'Shop')], max_length=100)),
                ('property_number', models.PositiveIntegerField()),
                ('drawn_on', models.DateField()),
                ('purpose', models.CharField(max_length=256)),
                ('upload', models.FileField(upload_to='Recovery_management/invoice')),
            ],
        ),
        migrations.CreateModel(
            name='recovery_call_followup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('follow_up', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='recovery_schedule_call',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('call_by', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='recovery_task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('task_detail', models.TextField()),
                ('assign_to', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='society',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('society_title', models.CharField(max_length=256)),
                ('society_brand', models.CharField(max_length=256)),
                ('society_description', models.TextField()),
                ('society_image', models.ImageField(upload_to='society_images')),
                ('site_plan', models.FileField(upload_to='society_site_plan')),
                ('lease_out_plan', models.FileField(upload_to='society_lease_out_plan')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contact', models.CharField(max_length=10)),
                ('permanent_address', models.CharField(max_length=512, null=True)),
                ('current_address', models.CharField(max_length=512, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='villa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('villa_number', models.PositiveIntegerField()),
                ('length', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField()),
                ('area', models.PositiveIntegerField()),
                ('ownership', models.CharField(choices=[('Rented', 'Rented'), ('Owned', 'Owned')], default='Rented', max_length=150)),
                ('occupancy', models.CharField(choices=[('Occupied', 'Occupied'), ('Vacant', 'Vacant')], default='Occupied', max_length=150)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.society')),
            ],
        ),
        migrations.CreateModel(
            name='society_expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_type', models.CharField(choices=[('Flat', 'Flat'), ('Villa', 'Villa'), ('Plot', 'Plot'), ('Shop', 'Shop')], max_length=100)),
                ('expense_by', models.CharField(max_length=150)),
                ('reason', models.TextField()),
                ('Amount', models.PositiveIntegerField()),
                ('date', models.DateField()),
                ('invoice', models.FileField(upload_to='society-expense/invoice')),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.block')),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.floor')),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.society')),
            ],
        ),
        migrations.CreateModel(
            name='rental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_type', models.CharField(choices=[('Flat', 'Flat'), ('Villa', 'Villa'), ('Plot', 'Plot'), ('Shop', 'Shop')], max_length=100)),
                ('property_number', models.PositiveIntegerField()),
                ('rent', models.PositiveIntegerField()),
                ('date', models.DateField()),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.block')),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.floor')),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.society')),
            ],
        ),
        migrations.CreateModel(
            name='plot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plot_number', models.PositiveIntegerField()),
                ('length', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField()),
                ('area', models.PositiveIntegerField()),
                ('ownership', models.CharField(choices=[('Rented', 'Rented'), ('Owned', 'Owned')], default='Rented', max_length=150)),
                ('occupancy', models.CharField(choices=[('Occupied', 'Occupied'), ('Vacant', 'Vacant')], default='Occupied', max_length=150)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.society')),
            ],
        ),
        migrations.AddField(
            model_name='floor',
            name='society',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.society'),
        ),
        migrations.CreateModel(
            name='flat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flat_number', models.PositiveIntegerField()),
                ('bedroom', models.PositiveIntegerField()),
                ('hall', models.PositiveIntegerField()),
                ('kitchen', models.PositiveIntegerField()),
                ('balcony', models.PositiveIntegerField()),
                ('Area', models.CharField(max_length=20)),
                ('ownership', models.CharField(choices=[('Rented', 'Rented'), ('Owned', 'Owned')], default='Rented', max_length=150)),
                ('occupancy', models.CharField(choices=[('Occupied', 'Occupied'), ('Vacant', 'Vacant')], default='Occupied', max_length=150)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.block')),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.floor')),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.society')),
            ],
        ),
        migrations.CreateModel(
            name='commercial_shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_number', models.PositiveIntegerField()),
                ('length', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField()),
                ('area', models.PositiveIntegerField()),
                ('ownership', models.CharField(choices=[('Rented', 'Rented'), ('Owned', 'Owned')], default='Rented', max_length=150)),
                ('occupancy', models.CharField(choices=[('Occupied', 'Occupied'), ('Vacant', 'Vacant')], default='Occupied', max_length=150)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.society')),
            ],
        ),
        migrations.CreateModel(
            name='client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aadhar_number', models.CharField(max_length=12)),
                ('PAN_number', models.CharField(max_length=10)),
                ('user_type', multiselectfield.db.fields.MultiSelectField(choices=[('Client/Resident', 'Client/Resident'), ('Role Based User', 'Role Based User')], max_length=31)),
                ('registry_date', models.DateField()),
                ('booking_date', models.DateField()),
                ('occupancy_date', models.DateField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CAM_demand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('reference_number', models.PositiveIntegerField()),
                ('property_type', models.CharField(choices=[('Flat', 'Flat'), ('Villa', 'Villa'), ('Plot', 'Plot'), ('Shop', 'Shop')], max_length=100)),
                ('property_number', models.PositiveIntegerField()),
                ('client_name', models.CharField(max_length=150)),
                ('demand', models.CharField(max_length=10)),
                ('CAM_charges', models.CharField(max_length=10)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.block')),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.floor')),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.society')),
            ],
        ),
        migrations.AddField(
            model_name='block',
            name='society',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CMS_app.society'),
        ),
    ]
